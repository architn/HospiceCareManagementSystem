/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package userinterface.Workflows;

import Business.AppConstants;
import Business.EcoSystem;
import Business.Hospice.Hospice;
import Business.Nurses.Nurse;
import Business.Patients.Patient;
import Business.UserAccount.UserAccount;
import Business.ValidationLogic;
import Business.VitalSigns.BMICalculator;
import Business.VitalSigns.BloodPressureCalculator;
import Business.VitalSigns.CholesterolCalculator;
import java.util.Date;
import javax.swing.JOptionPane;

/**
 *
 * @author architnigam
 */
public class LogVitalSignsJPanel extends javax.swing.JPanel {

    /**
     * Creates new form LogVitalSignsJPanel
     */
    BMICalculator bmiCalculator = new BMICalculator();
    CholesterolCalculator cholesterolCalculator = new CholesterolCalculator();
    BloodPressureCalculator bloodPressureCalculator = new BloodPressureCalculator();
    AppConstants AppConstants = new AppConstants();
    private EcoSystem system;
    private UserAccount userAccount;
    
    public LogVitalSignsJPanel(EcoSystem system, UserAccount userAccount ) {
        initComponents();
        this.system = system;
        this.userAccount = userAccount;
        populateMedicalRecordNumberDropdown();
        txtGender.setEditable(false);
        txtEthnicity.setEditable(false);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        lblMRN = new javax.swing.JLabel();
        lblWeight = new javax.swing.JLabel();
        txtWeight = new javax.swing.JTextField();
        lblPounds = new javax.swing.JLabel();
        lblHeight = new javax.swing.JLabel();
        txtHeight = new javax.swing.JTextField();
        lblInches = new javax.swing.JLabel();
        lblSystole = new javax.swing.JLabel();
        txtSystoleReading = new javax.swing.JTextField();
        lblDiastole = new javax.swing.JLabel();
        txtDiastoleReading = new javax.swing.JTextField();
        lblmmHg1 = new javax.swing.JLabel();
        lblmmHg2 = new javax.swing.JLabel();
        lblCholesterolReading = new javax.swing.JLabel();
        txtCholestrolReading = new javax.swing.JTextField();
        lblmgdL = new javax.swing.JLabel();
        btnSaveData = new javax.swing.JButton();
        lblTitle = new javax.swing.JLabel();
        lblAge = new javax.swing.JLabel();
        lblGender = new javax.swing.JLabel();
        txtGender = new javax.swing.JTextField();
        btnPopulate = new javax.swing.JButton();
        ddMRN = new javax.swing.JComboBox();
        txtEthnicity = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();

        jPanel1.setBackground(new java.awt.Color(204, 216, 216));
        jPanel1.setLayout(null);

        lblMRN.setFont(new java.awt.Font("Helvetica", 1, 14)); // NOI18N
        lblMRN.setText("Medical Record Number:");
        jPanel1.add(lblMRN);
        lblMRN.setBounds(67, 291, 168, 15);

        lblWeight.setFont(new java.awt.Font("Helvetica", 1, 14)); // NOI18N
        lblWeight.setText("Weight (in pounds):");
        jPanel1.add(lblWeight);
        lblWeight.setBounds(60, 470, 137, 15);
        jPanel1.add(txtWeight);
        txtWeight.setBounds(260, 460, 145, 26);

        lblPounds.setFont(new java.awt.Font("Helvetica", 1, 14)); // NOI18N
        lblPounds.setText("pounds");
        jPanel1.add(lblPounds);
        lblPounds.setBounds(430, 470, 53, 15);

        lblHeight.setFont(new java.awt.Font("Helvetica", 1, 14)); // NOI18N
        lblHeight.setText("Height (in Inches):");
        jPanel1.add(lblHeight);
        lblHeight.setBounds(60, 530, 127, 15);
        jPanel1.add(txtHeight);
        txtHeight.setBounds(260, 530, 145, 26);

        lblInches.setFont(new java.awt.Font("Helvetica", 1, 14)); // NOI18N
        lblInches.setText("inches");
        jPanel1.add(lblInches);
        lblInches.setBounds(430, 530, 46, 15);

        lblSystole.setFont(new java.awt.Font("Helvetica", 1, 14)); // NOI18N
        lblSystole.setText("Systole Reading: ");
        jPanel1.add(lblSystole);
        lblSystole.setBounds(50, 600, 121, 15);
        jPanel1.add(txtSystoleReading);
        txtSystoleReading.setBounds(260, 600, 145, 26);

        lblDiastole.setFont(new java.awt.Font("Helvetica", 1, 14)); // NOI18N
        lblDiastole.setText("Diastole Reading: ");
        jPanel1.add(lblDiastole);
        lblDiastole.setBounds(50, 670, 126, 15);
        jPanel1.add(txtDiastoleReading);
        txtDiastoleReading.setBounds(260, 670, 145, 26);

        lblmmHg1.setFont(new java.awt.Font("Helvetica", 1, 14)); // NOI18N
        lblmmHg1.setText("mm Hg");
        jPanel1.add(lblmmHg1);
        lblmmHg1.setBounds(430, 610, 47, 15);

        lblmmHg2.setFont(new java.awt.Font("Helvetica", 1, 14)); // NOI18N
        lblmmHg2.setText("mm Hg");
        jPanel1.add(lblmmHg2);
        lblmmHg2.setBounds(430, 680, 47, 15);

        lblCholesterolReading.setFont(new java.awt.Font("Helvetica", 1, 14)); // NOI18N
        lblCholesterolReading.setText("Cholesterol Reading: ");
        jPanel1.add(lblCholesterolReading);
        lblCholesterolReading.setBounds(50, 740, 149, 15);
        jPanel1.add(txtCholestrolReading);
        txtCholestrolReading.setBounds(260, 740, 145, 26);

        lblmgdL.setFont(new java.awt.Font("Helvetica", 1, 14)); // NOI18N
        lblmgdL.setText("mg/dL");
        jPanel1.add(lblmgdL);
        lblmgdL.setBounds(430, 740, 43, 15);

        btnSaveData.setFont(new java.awt.Font("Helvetica", 1, 14)); // NOI18N
        btnSaveData.setText("Save Data");
        btnSaveData.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        btnSaveData.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSaveDataActionPerformed(evt);
            }
        });
        jPanel1.add(btnSaveData);
        btnSaveData.setBounds(270, 810, 130, 27);

        lblTitle.setBackground(new java.awt.Color(255, 255, 255));
        lblTitle.setFont(new java.awt.Font("Lucida Grande", 1, 20)); // NOI18N
        lblTitle.setText("Vital Signs Encounter");
        jPanel1.add(lblTitle);
        lblTitle.setBounds(125, 19, 470, 54);

        lblAge.setFont(new java.awt.Font("Helvetica", 1, 14)); // NOI18N
        lblAge.setText("Ethnicity:");
        jPanel1.add(lblAge);
        lblAge.setBounds(70, 400, 66, 15);

        lblGender.setFont(new java.awt.Font("Helvetica", 1, 14)); // NOI18N
        lblGender.setText("Gender: ");
        jPanel1.add(lblGender);
        lblGender.setBounds(70, 340, 59, 15);
        jPanel1.add(txtGender);
        txtGender.setBounds(260, 340, 143, 26);

        btnPopulate.setFont(new java.awt.Font("Helvetica", 1, 14)); // NOI18N
        btnPopulate.setText("Populate");
        btnPopulate.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        btnPopulate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnPopulateActionPerformed(evt);
            }
        });
        jPanel1.add(btnPopulate);
        btnPopulate.setBounds(408, 288, 81, 21);

        ddMRN.setModel(new javax.swing.DefaultComboBoxModel(new String[] {  }));
        jPanel1.add(ddMRN);
        ddMRN.setBounds(253, 285, 143, 27);
        jPanel1.add(txtEthnicity);
        txtEthnicity.setBounds(260, 400, 143, 26);

        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/logsigns.jpeg"))); // NOI18N
        jPanel1.add(jLabel1);
        jLabel1.setBounds(100, 90, 715, 160);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, 1268, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, 865, Short.MAX_VALUE)
        );
    }// </editor-fold>//GEN-END:initComponents

    private void btnSaveDataActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSaveDataActionPerformed
        // TODO add your handling code here:
        String mrn = ddMRN.getSelectedItem().toString();
        Patient patient = system.getPatientDirectory().findPatientByMRN(mrn, 
                system.getPatientDirectory().getPatientList());
        String weightInString = (txtWeight.getText());
        String heightInString = (txtHeight.getText());
        String totalCholesterolReadingInString = (txtCholestrolReading.getText());
        String systoleInString = (txtSystoleReading.getText());
        String diastoleInString = (txtDiastoleReading.getText());
        String gender = txtGender.getText();
        String ethinicity = txtEthnicity.getText();
        ValidationLogic validationLogic = new ValidationLogic();
        if(validationLogic.ValidateIfAllFieldsOnUIAreFilledAndAreNumeric(mrn,  weightInString,
            heightInString, totalCholesterolReadingInString, systoleInString, diastoleInString))
        {
            double weight = Double.parseDouble(txtWeight.getText());
            double height = Double.parseDouble(txtHeight.getText());
            double totalCholesterolReading = Double.parseDouble(txtCholestrolReading.getText());
            double systoleReading = Double.parseDouble(txtSystoleReading.getText());
            double diastoleReading = Double.parseDouble(txtDiastoleReading.getText());
            double BMIValue = (bmiCalculator.CalculateBMI(weight, height));

            int BMICriticality = bmiCalculator.DetermineBMICriticalityOfPatient(weight, height);
            String BMICriticalityLevel = bmiCalculator.BMIMapCriticalityLevelToCategory(BMICriticality);
            String BMIMessage = "Patient with MRN '"+mrn+"' BMI value is: '"+BMIValue+"' and the patient's BMI is"
            + ": "+BMICriticalityLevel;

            int CholesterolCriticality = cholesterolCalculator.DetermineCholesterolDangerLevelCriticalityOfPatient(totalCholesterolReading);
            String CholesterolCriticalityLevel = cholesterolCalculator.CholesterolMapCriticalityLevelToCategory(CholesterolCriticality);
            String CholesterolMessage = "Patient with MRN '"+mrn+"' cholesterol level is: "+CholesterolCriticalityLevel;

            int BPCriticality = bloodPressureCalculator.DetermineBloodPressureCriticalityOfPatient(systoleReading, diastoleReading);
            String BPCriticalityLevel = bloodPressureCalculator.BPMapCriticalityLevelToCategory(BPCriticality);
            String BPMessage = "Patient with MRN '"+mrn+"' blood pressure level is: "+BPCriticalityLevel;

            String finalMessageOnSave = AppConstants.PatientRecordSuccessfullySavedMessage + "\n \n" +BMIMessage +
            "\n" +BPMessage+ "\n" +CholesterolMessage ;
            
            system.getVitalSignsDirectory().createVitalSignsRecord(patient, gender, ethinicity, 
                            new Date(), height, weight, systoleReading, diastoleReading, totalCholesterolReading);


            JOptionPane.showMessageDialog(this, finalMessageOnSave);

            txtHeight.setText("");
            txtWeight.setText("");
            txtSystoleReading.setText("");
            txtDiastoleReading.setText("");
            txtCholestrolReading.setText("");
        }
    }//GEN-LAST:event_btnSaveDataActionPerformed

    private void btnPopulateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnPopulateActionPerformed
        // TODO add your handling code here:
        String mrn = ddMRN.getSelectedItem().toString();
        Patient patient = system.getPatientDirectory().findPatientByMRN(mrn, 
                system.getPatientDirectory().getPatientList());
        txtGender.setText(patient.getGender());
        txtEthnicity.setText(patient.getEthincity());
        
    }//GEN-LAST:event_btnPopulateActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnPopulate;
    private javax.swing.JButton btnSaveData;
    private javax.swing.JComboBox<String> ddMRN;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JLabel lblAge;
    private javax.swing.JLabel lblCholesterolReading;
    private javax.swing.JLabel lblDiastole;
    private javax.swing.JLabel lblGender;
    private javax.swing.JLabel lblHeight;
    private javax.swing.JLabel lblInches;
    private javax.swing.JLabel lblMRN;
    private javax.swing.JLabel lblPounds;
    private javax.swing.JLabel lblSystole;
    private javax.swing.JLabel lblTitle;
    private javax.swing.JLabel lblWeight;
    private javax.swing.JLabel lblmgdL;
    private javax.swing.JLabel lblmmHg1;
    private javax.swing.JLabel lblmmHg2;
    private javax.swing.JTextField txtCholestrolReading;
    private javax.swing.JTextField txtDiastoleReading;
    private javax.swing.JTextField txtEthnicity;
    private javax.swing.JTextField txtGender;
    private javax.swing.JTextField txtHeight;
    private javax.swing.JTextField txtSystoleReading;
    private javax.swing.JTextField txtWeight;
    // End of variables declaration//GEN-END:variables

    private void populateMedicalRecordNumberDropdown() {
        Nurse nurse = system.getNurseDirectory().findNurseByEmailID(userAccount.getUsername(), 
                system.getNurseDirectory().getNurseList());
        Hospice hospice = nurse.getHospiceNurseWorksIn();
        for(Patient patients : system.getPatientDirectory().getPatientList())
        {
            if(patients.getRegisteredProvider().getOperatingHospice().getHospiceID().equals(
                    hospice.getHospiceID()))
            {
                ddMRN.addItem(patients.getPatientMRN());
            }
        }
    }
} 
