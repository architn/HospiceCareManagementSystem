/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package userinterface.SystemAdminWorkArea;

import Business.EcoSystem;
import Business.Hospice.Hospice;
import Business.Payers.Payer;
import Business.UserAccount.UserAccount;
import java.awt.CardLayout;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author nishitasheelendraupadhyay
 */
public class ManagePayerJPanel extends javax.swing.JPanel {

    /**
     * Creates new form ManagePayerJPanel
     */
    JPanel userProcessContainer;
    UserAccount userAccount;
    EcoSystem ecosystem;
    public ManagePayerJPanel(JPanel userProcessContainer, UserAccount userAccount, EcoSystem ecosystem) {
        this.userProcessContainer = userProcessContainer;
        this.userAccount = userAccount;
        this.ecosystem = ecosystem;
        initComponents();
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        DonorScrollPane = new javax.swing.JScrollPane();
        tblPayerList = new javax.swing.JTable();
        lblHospiceList = new javax.swing.JLabel();
        lblTitle = new javax.swing.JLabel();
        btnBack = new javax.swing.JButton();
        btnRefresh = new javax.swing.JButton();
        btnUpdate = new javax.swing.JButton();
        btnCreate = new javax.swing.JButton();
        btnDelete = new javax.swing.JButton();
        txtEmailID = new javax.swing.JTextField();
        lblEmailID = new javax.swing.JLabel();
        btnSave = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();

        setBackground(new java.awt.Color(255, 204, 204));
        setLayout(null);

        tblPayerList.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Name", "Billing Address", "Email ID", "Payer"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        DonorScrollPane.setViewportView(tblPayerList);

        add(DonorScrollPane);
        DonorScrollPane.setBounds(79, 155, 830, 120);

        lblHospiceList.setFont(new java.awt.Font("Helvetica", 1, 14)); // NOI18N
        lblHospiceList.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblHospiceList.setText("Payer List");
        add(lblHospiceList);
        lblHospiceList.setBounds(20, 110, 180, 60);

        lblTitle.setFont(new java.awt.Font("Helvetica", 1, 24)); // NOI18N
        lblTitle.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblTitle.setText("Manage Payer");
        add(lblTitle);
        lblTitle.setBounds(340, 10, 260, 60);

        btnBack.setFont(new java.awt.Font("Helvetica", 1, 14)); // NOI18N
        btnBack.setText("Back");
        btnBack.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        btnBack.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBackActionPerformed(evt);
            }
        });
        add(btnBack);
        btnBack.setBounds(80, 20, 120, 40);

        btnRefresh.setFont(new java.awt.Font("Helvetica", 1, 14)); // NOI18N
        btnRefresh.setText("Refresh");
        btnRefresh.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        btnRefresh.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRefreshActionPerformed(evt);
            }
        });
        add(btnRefresh);
        btnRefresh.setBounds(90, 290, 130, 40);

        btnUpdate.setFont(new java.awt.Font("Helvetica", 1, 14)); // NOI18N
        btnUpdate.setText("Update");
        btnUpdate.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        btnUpdate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUpdateActionPerformed(evt);
            }
        });
        add(btnUpdate);
        btnUpdate.setBounds(330, 290, 130, 40);

        btnCreate.setFont(new java.awt.Font("Helvetica", 1, 14)); // NOI18N
        btnCreate.setText("Create >>");
        btnCreate.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        btnCreate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCreateActionPerformed(evt);
            }
        });
        add(btnCreate);
        btnCreate.setBounds(770, 290, 140, 40);

        btnDelete.setFont(new java.awt.Font("Helvetica", 1, 14)); // NOI18N
        btnDelete.setText("Delete");
        btnDelete.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        btnDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDeleteActionPerformed(evt);
            }
        });
        add(btnDelete);
        btnDelete.setBounds(570, 290, 120, 40);

        txtEmailID.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtEmailIDActionPerformed(evt);
            }
        });
        add(txtEmailID);
        txtEmailID.setBounds(150, 410, 130, 40);

        lblEmailID.setFont(new java.awt.Font("Helvetica", 1, 14)); // NOI18N
        lblEmailID.setText("Email ID: ");
        add(lblEmailID);
        lblEmailID.setBounds(70, 420, 100, 40);

        btnSave.setFont(new java.awt.Font("Helvetica", 1, 14)); // NOI18N
        btnSave.setText("Save");
        btnSave.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        btnSave.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSaveActionPerformed(evt);
            }
        });
        add(btnSave);
        btnSave.setBounds(100, 460, 110, 30);

        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/ManagePayer.png"))); // NOI18N
        jLabel1.setText("jLabel1");
        add(jLabel1);
        jLabel1.setBounds(320, 360, 590, 390);
    }// </editor-fold>//GEN-END:initComponents

    private void btnBackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBackActionPerformed
        // TODO add your handling code here:
        userProcessContainer.remove(this);
        CardLayout Layout = (CardLayout) userProcessContainer.getLayout();
        SystemAdminWorkAreaJPanel a = new SystemAdminWorkAreaJPanel(userProcessContainer, userAccount, ecosystem);
        userProcessContainer.add(a);
        Layout.next(userProcessContainer);
    }//GEN-LAST:event_btnBackActionPerformed
    public void populateTable()
    {
        DefaultTableModel dtm = (DefaultTableModel) tblPayerList.getModel();
        dtm.setRowCount(0);
        
        for(Payer p : ecosystem.getPayerDirectory().getListOfPayers())
        {
            Object [] row = new Object[4];
            row[0] = p.getPayerName();
            row[1] = p.getPayerBillingAddress();
            row[2] = p.getPayerEmailID();
            row[3] = p;
            dtm.addRow(row);
        }
    }

    private void btnRefreshActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRefreshActionPerformed
        // TODO add your handling code here:
        populateTable();
    }//GEN-LAST:event_btnRefreshActionPerformed

    private void btnUpdateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUpdateActionPerformed
        // TODO add your handling code here:
        int SelectedRow = tblPayerList.getSelectedRow();
        if(SelectedRow < 0)
        {
            JOptionPane.showMessageDialog(null, "Please select a particular row");
            return;
        }
        else
        {
            DefaultTableModel model = (DefaultTableModel) tblPayerList.getModel();
            Payer selectedPayer = (Payer) model.getValueAt(SelectedRow, 3);
            
            txtEmailID.setText(selectedPayer.getPayerEmailID());
        }
    }//GEN-LAST:event_btnUpdateActionPerformed

    private void btnCreateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCreateActionPerformed
        
        AddPayerJPanel addpayerjpanel = new AddPayerJPanel(userProcessContainer, userAccount, ecosystem);
        userProcessContainer.add("Add Payer",addpayerjpanel);
        CardLayout Layout = (CardLayout) userProcessContainer.getLayout();
        Layout.next(userProcessContainer);        // TODO add your handling code here:
    }//GEN-LAST:event_btnCreateActionPerformed

    private void btnDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDeleteActionPerformed
        int SelectedRow = tblPayerList.getSelectedRow();
        if(SelectedRow < 0)
        {
            JOptionPane.showMessageDialog(this, "Please select a particular row");
            return;
        }
        else 
        {
            DefaultTableModel model = (DefaultTableModel) tblPayerList.getModel();
            Payer payer = (Payer) model.getValueAt(SelectedRow, 3);
            ecosystem.getPayerDirectory().deletePayer(SelectedRow); 
            JOptionPane.showMessageDialog(this, "Payer Details Deleted");
            populateTable();
        }        // TODO add your handling code here:
    }//GEN-LAST:event_btnDeleteActionPerformed

    private void txtEmailIDActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtEmailIDActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtEmailIDActionPerformed

    private void btnSaveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSaveActionPerformed
        // TODO add your handling code here:
        int SelectedRow = tblPayerList.getSelectedRow();
        if(SelectedRow < 0)
        {
            JOptionPane.showMessageDialog(null, "Please select a particular row");
            return;
        }
        else
        {
            DefaultTableModel model = (DefaultTableModel) tblPayerList.getModel();
            Payer selectedPayer  = (Payer) model.getValueAt(SelectedRow, 3); 
            Payer updatepayer = ecosystem.getPayerDirectory().updatePayer(selectedPayer);
            updatepayer.setPayerEmailID(txtEmailID.getText()); 
            JOptionPane.showMessageDialog(null, "Updates have been saved!!");
            txtEmailID.setText("");
        }
        
    }//GEN-LAST:event_btnSaveActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JScrollPane DonorScrollPane;
    private javax.swing.JButton btnBack;
    private javax.swing.JButton btnCreate;
    private javax.swing.JButton btnDelete;
    private javax.swing.JButton btnRefresh;
    private javax.swing.JButton btnSave;
    private javax.swing.JButton btnUpdate;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel lblEmailID;
    private javax.swing.JLabel lblHospiceList;
    private javax.swing.JLabel lblTitle;
    private javax.swing.JTable tblPayerList;
    private javax.swing.JTextField txtEmailID;
    // End of variables declaration//GEN-END:variables
}
